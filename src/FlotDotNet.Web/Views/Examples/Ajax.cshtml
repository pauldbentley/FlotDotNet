@model FlotDotNet.FlotChart

@{
    ViewData["Title"] = "AJAX";
}

<div class="demo-container">
    <div id="@Model.PlaceholderId" class="demo-placeholder"></div>
</div>

<p>Example of loading data dynamically with AJAX. Percentage change in GDP (source: <a href="http://epp.eurostat.ec.europa.eu/tgm/table.do?tab=table&init=1&plugin=1&language=en&pcode=tsieb020">Eurostat</a>). Click the buttons below:</p>

<p>The data is fetched over HTTP, in this case directly from text files. Usually the URL would point to some web server handler (e.g. a PHP page or Java/.NET/Python/Ruby on Rails handler) that extracts it from a database and serializes it to JSON.</p>

<p>
    <button class="fetchSeries">First dataset</button>
    [ <a href="/lib/flot/examples/ajax/data-eu-gdp-growth.json">see data</a> ]
    <span></span>
</p>

<p>
    <button class="fetchSeries">Second dataset</button>
    [ <a href="/lib/flot/examples/ajax/data-japan-gdp-growth.json">see data</a> ]
    <span></span>
</p>

<p>
    <button class="fetchSeries">Third dataset</button>
    [ <a href="/lib/flot/examples/ajax/data-usa-gdp-growth.json">see data</a> ]
    <span></span>
</p>

<p>If you combine AJAX with setTimeout, you can poll the server for new data.</p>

<p>
    <button class="dataUpdate">Poll for data</button>
</p>

@section Scripts {
    <script type="text/javascript">
        $(function()
        {
            @Html.Raw(Model.Plot())

            $("button.fetchSeries").click(function()
            {
                var button = $(this);

                // Find the URL in the link right next to us, then fetch the data
                var dataurl = button.siblings("a").attr("href");

                function onDataReceived(series)
                {
                    // Extract the first coordinate pair; jQuery has parsed it, so
                    // the data is now just an ordinary JavaScript object
                    var firstcoordinate = "(" + series.data[0][0] + ", " + series.data[0][1] + ")";
                    button.siblings("span").text("Fetched " + series.label + ", first point: " + firstcoordinate);

                    // Push the new data onto our existing data array
                    if (!chart.data[series.label])
                    {
                        chart.data[series.label] = series;
                    }

                    chart.plotChart();
                }

                $.ajax({
                    url: dataurl,
                    type: "GET",
                    dataType: "json",
                    success: onDataReceived
                });
            });

            // Initiate a recurring data update
            $("button.dataUpdate").click(function()
            {
                chart.data = {};

                chart.plotChart();

                var iteration = 0;

                function fetchData()
                {
                    ++iteration;

                    function onDataReceived(series)
                    {
                        // Load all the data in one pass; if we only got partial
                        // data we could merge it with what we already have.
                        chart.data[series.label] = series;
                        chart.plotChart();
                    }

                    // Normally we call the same URL - a script connected to a
                    // database - but in this case we only have static example
                    // files, so we need to modify the URL.
                    $.ajax({
                        url: "/lib/flot/examples/ajax/data-eu-gdp-growth-" + iteration + ".json",
                        type: "GET",
                        dataType: "json",
                        success: onDataReceived
                    });

                    if (iteration < 5)
                    {
                        setTimeout(fetchData, 1000);
                    }
                    else
                    {
                        chart.data = {};
                    }
                }

                setTimeout(fetchData, 1000);
            });

            // Load the first series by default, so we don't have an empty plot
            $("button.fetchSeries:first").click();
        });
    </script>
}
